// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// ProductHandler is an autogenerated mock type for the ProductHandler type
type ProductHandler struct {
	mock.Mock
}

// CreateProduct provides a mock function with given fields: res, req
func (_m *ProductHandler) CreateProduct(res http.ResponseWriter, req *http.Request) {
	_m.Called(res, req)
}

// DeleteProductById provides a mock function with given fields: res, req
func (_m *ProductHandler) DeleteProductById(res http.ResponseWriter, req *http.Request) {
	_m.Called(res, req)
}

// GetAllProducts provides a mock function with given fields: res, req
func (_m *ProductHandler) GetAllProducts(res http.ResponseWriter, req *http.Request) {
	_m.Called(res, req)
}

// GetProductById provides a mock function with given fields: res, req
func (_m *ProductHandler) GetProductById(res http.ResponseWriter, req *http.Request) {
	_m.Called(res, req)
}

// UpdateProductById provides a mock function with given fields: res, req
func (_m *ProductHandler) UpdateProductById(res http.ResponseWriter, req *http.Request) {
	_m.Called(res, req)
}

type mockConstructorTestingTNewProductHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewProductHandler creates a new instance of ProductHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProductHandler(t mockConstructorTestingTNewProductHandler) *ProductHandler {
	mock := &ProductHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
